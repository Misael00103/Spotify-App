{"ast":null,"code":"import { environment } from './../../../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SearchService = /*#__PURE__*/(() => {\n  var _class;\n  class SearchService {\n    constructor(http) {\n      this.http = http;\n      this.URL = environment.api;\n    }\n    searchTracks$(term) {\n      return this.http.get(`${this.URL}/tracks?src=${term}`).pipe(map(dataRaw => dataRaw.data));\n    }\n    filterResults(data, term) {\n      // Filtra los resultados según la lógica deseada\n      return data.filter(track => this.isMatch(track, term));\n    }\n    isMatch(track, term) {\n      // Implementa la lógica de comparación aquí, por ejemplo, comparación de nombres, artistas, etc.\n      const trackName = track.name.toLowerCase();\n      const artistName = track.artist.toLowerCase();\n      const searchTerm = term.toLowerCase();\n      return trackName.includes(searchTerm) || artistName.includes(searchTerm);\n    }\n  }\n  _class = SearchService;\n  _class.ɵfac = function SearchService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}