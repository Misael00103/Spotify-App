{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class OrderListPipe {\n  transform(value, args = null, sort = 'asc') {\n    if (args === null) {\n      return value;\n    } else {\n      const tmpList = value.sort((a, b) => {\n        if (a[args] < b[args]) {\n          return -1;\n        } else if (a[args] === b[args]) {\n          return 0;\n        } else if (a[args] > b[args]) {\n          return 1;\n        }\n        return 1;\n      });\n      return sort === 'asc' ? tmpList : tmpList.reverse();\n    }\n  }\n}\n_class = OrderListPipe;\n_class.ɵfac = function OrderListPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"orderList\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAExBC,SAAS,CAACC,KAAiB,EAAEC,OAAsB,IAAI,EAAEC,OAAe,KAAK;IAC3E,IAAID,IAAI,KAAK,IAAI,EAAE;MACjB,OAAOD,KAAK;KACb,MAAM;MACL,MAAMG,OAAO,GAAGH,KAAK,CAACE,IAAI,CAAC,CAACE,CAAC,EAAEC,CAAC,KAAI;QAClC,IAAID,CAAC,CAACH,IAAI,CAAC,GAAGI,CAAC,CAACJ,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC,CAAC;SACV,MACI,IAAIG,CAAC,CAACH,IAAI,CAAC,KAAKI,CAAC,CAACJ,IAAI,CAAC,EAAE;UAC5B,OAAO,CAAC;SACT,MACI,IAAIG,CAAC,CAACH,IAAI,CAAC,GAAGI,CAAC,CAACJ,IAAI,CAAC,EAAE;UAC1B,OAAO,CAAC;;QAEV,OAAO,CAAC;MACV,CAAC,CAAC;MAEF,OAAQC,IAAI,KAAK,KAAK,GAAIC,OAAO,GAAGA,OAAO,CAACG,OAAO,EAAE;;EAEzD;;SArBWR,aAAa;;mBAAbA,MAAa;AAAA;;;QAAbA,MAAa;EAAAS;AAAA","names":["OrderListPipe","transform","value","args","sort","tmpList","a","b","reverse","pure"],"sourceRoot":"","sources":["D:\\Angular-App\\spotify-app\\src\\app\\shared\\pipe\\order-list.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { TrackModel } from '@core/models/tracks.model';\n\n@Pipe({\n  name: 'orderList'\n})\nexport class OrderListPipe implements PipeTransform {\n\n  transform(value: Array<any>, args: string | null = null, sort: string = 'asc'): TrackModel[] {\n    if (args === null) {\n      return value\n    } else {\n      const tmpList = value.sort((a, b) => {\n        if (a[args] < b[args]) {\n          return -1\n        }\n        else if (a[args] === b[args]) {\n          return 0;\n        }\n        else if (a[args] > b[args]) {\n          return 1;\n        }\n        return 1\n      });\n\n      return (sort === 'asc') ? tmpList : tmpList.reverse()\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}